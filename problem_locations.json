{"directory":"/","meta":{"displayStyle":"all","title":"problems","description":"","weight":0},"files":[{"directory":"/intro","meta":{"title":"A Beginner's Guide to Coding","description":"Is this you're first time coding? If so, start at the problem below. The problems begin with requiring no prior knowledge of coding and gradually increase in difficulty. If you have experience consider starting with the easy problems.","displayStyle":"whitelist","whitelist":["intro1"],"weight":10000},"files":[{"problemName":"Learning to Code","problemId":"/intro/intro1"}]},{"directory":"/easy","meta":{"title":"Easy Problems","description":"Good for beginners to start building up their skills.","displayStyle":"all","weight":9000},"files":[{"problemName":"Count Vowels In a Sentence","problemId":"/easy/countvowelsinsentence"}]},{"directory":"/medium","meta":{"title":"Medium Problems","description":"Medium problems are a bit more challenging than easy problems and are a good fit for people who have some experience with coding.","displayStyle":"all","weight":8000},"files":[{"problemName":"Binary Search Tree Traversal","problemId":"/medium/BinarySearchTree"},{"problemName":"Fibonacci Problem","problemId":"/medium/fibonacci"},{"problemName":"Merge Sort","problemId":"/medium/MergeSort"}]},{"directory":"/hard","meta":{"title":"Hard Problems","description":"Hard problems are a good fit for people who are comfortable programming and want some problems to challenge their critical thinking skills.","displayStyle":"all","weight":7000},"files":[{"problemName":"Combinatorial Optimization","problemId":"/hard/dynamic"},{"problemName":"Graph Theory","problemId":"/hard/GraphTheory"}]}]}