{"version":3,"file":"static/js/221.ed47e118.chunk.js","mappings":"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","sources":["Home.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Link as ScrollLink} from 'react-scroll'\r\n\r\nclass ProblemData {\r\n    problemName: string = \"\";\r\n    problemId: string = \"\";\r\n}\r\n\r\nclass ProblemDirData {\r\n    \"directory\": string = \"\";\r\n    \"meta\": {\r\n        \"displayStyle\": string\r\n        \"title\": string\r\n        \"description\": string\r\n        \"weight\": number\r\n    }\r\n    \"files\": (ProblemData | ProblemDirData)[]\r\n}\r\n\r\nfunction Home() {\r\n    const [data, setData] = useState(null as ProblemDirData | null);\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.PUBLIC_URL + \"/problem_locations.json\")\r\n            .then(async response => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return await (response.json()) as ProblemDirData\r\n            })\r\n            .then(data => {\r\n                setData(data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error loading available problems', error);\r\n            });\r\n    }, []);\r\n\r\n\r\n    type ProblemSectionProps = {\r\n        index: number;\r\n        children: React.ReactNode;\r\n    };\r\n\r\n    function ProblemSection({index, children}: ProblemSectionProps) {\r\n        let color = getColorForProblemSection(index);\r\n        let color2 = getColorForProblemSection(index + 1);\r\n        return (\r\n            <div\r\n                style={{background: color}}>\r\n                {children}\r\n                <div style={{background: color2}}>\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 720 72\" className=\"pb-5\">\r\n                        <path fill={color}\r\n                              d=\"M0,60.56c55.63-30.1,102.12-38.64,133.59-41.06c37.46-2.88,94.56,7.7,207.25,28.99\r\n                            c72.83,13.76,91.25,18.65,123.67,12.56c55.51-10.42,56.68-35.11,104.35-37.2c52.67-2.31,79.26,26.62,124.64,10.63\r\n                            c17.13-6.04,29.35-15.8,36.71-22.71L720,0H0V60.56z\"></path>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function getProblemFolderAsJSX(data: (ProblemData | ProblemDirData)[]) {\r\n        return data.map((item, index) => {\r\n            if ('directory' in item) {\r\n                return (\r\n                    <ProblemSection key={index} index={index}>\r\n                        <div className={\"pb-5 ml-5 text-basically-black w-1/2\"}>\r\n                            <div className=\"text-3xl font-bold\"> {item.meta.title} </div>\r\n                            <div className=\"text-lg\"> {item.meta.description} </div>\r\n                            <div className=\"pl-4\"> {getProblemFolderAsJSX(item.files)} </div>\r\n                        </div>\r\n                    </ProblemSection>\r\n                );\r\n            } else {\r\n                return <div key={index}>\r\n                    <Link to={\"/Problem\" + item.problemId} className={'text-bright-blue underline text-lg'}>\r\n                        {item.problemName}\r\n                    </Link>\r\n                </div>\r\n            }\r\n        });\r\n    }\r\n\r\n    function getColorForProblemSection(index: number): string {\r\n        const colors = ['#f8e6f7', '#e6f7f8', '#f7f8e6', '#e6f8f7', '#f7e6f8', '#f8f7e6'];\r\n        return colors[index % colors.length];\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex justify-between h-[calc(100vh*0.60)] bg-white-pink\">\r\n                <div className=\"flex justify-center items-center\">\r\n                    <div className=\"-mt-16 w-2/3\">\r\n                        <div className=\"text-3xl text-black font-bold\">Welcome to</div>\r\n                        <div className=\"text-9xl font-extrabold text-bright-purple -mt-5\">WeCode</div>\r\n                        <div className=\"text-xl text-black font-semibold mt-5 pl-4\">Your Coding Ally</div>\r\n                        <ScrollLink to=\"problems\" smooth={true} duration={500}>\r\n                            <div className=\"text-xl text-bright-blue underline font-semibold pl-4\">Start Learning Now\r\n                            </div>\r\n                        </ScrollLink>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex w-1/3 justify-center items-center\">\r\n                    <div className=\" text-black font-bold\"></div>\r\n                </div>\r\n            </div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 720 72\" className=\"mb-5\">\r\n                <path fill=\"#f8e6f7\"\r\n                      d=\"M0,60.56c55.63-30.1,102.12-38.64,133.59-41.06c37.46-2.88,94.56,7.7,207.25,28.99\r\n                        c72.83,13.76,91.25,18.65,123.67,12.56c55.51-10.42,56.68-35.11,104.35-37.2c52.67-2.31,79.26,26.62,124.64,10.63\r\n                        c17.13-6.04,29.35-15.8,36.71-22.71L720,0H0V60.56z\"></path>\r\n            </svg>\r\n            <div className=\"ml-5 mt-16\">\r\n                <div className=\"text-5xl font-bold\">How it Works</div>\r\n                <div className=\"flex flex-row ml-5 mr-5 \">\r\n                    <div className=\"\">\r\n                        <div className=\"text-2xl font-semibold mt-5\">1. Code</div>\r\n                        <img className=\"w-96\" src=\"/assets/home/ex-code.png\"\r\n                             alt=\"An attempt at solving the fibbinachi problem\"/>\r\n                    </div>\r\n                    <div className=\"ml-5\">\r\n                        <div className=\"text-2xl font-semibold mt-5\">2. Test</div>\r\n                        <img className=\"w-96\" src=\"/assets/home/ex-test.png\"\r\n                             alt=\"Test results for the attempt at solving the fibbinachi problem. All but the first two tests failed\"/>\r\n                    </div>\r\n                    <div className=\"ml-5\">\r\n                        <div className=\"text-2xl font-semibold mt-5\">3. Ask for help</div>\r\n                        <img className=\"w-96\" src=\"/assets/home/ask-for-help.png\"\r\n                             alt=\"The AI tutor explaining why the remaining tests failed\"/>\r\n                    </div>\r\n                    <div className=\"ml-5\">\r\n                        <div className=\"text-2xl font-semibold mt-5\">4. Repeat & Learn</div>\r\n                        <img className=\"w-96\" src=\"/assets/home/ex-repeat.png\"\r\n                             alt=\"User going back to the problem to fix the issue\"/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 720 72\" className=\"pb-5 bg-[#f8e6f7]\">\r\n                <path fill={\"#1C1F23\"}\r\n                      d=\"M0,60.56c55.63-30.1,102.12-38.64,133.59-41.06c37.46-2.88,94.56,7.7,207.25,28.99\r\n                        c72.83,13.76,91.25,18.65,123.67,12.56c55.51-10.42,56.68-35.11,104.35-37.2c52.67-2.31,79.26,26.62,124.64,10.63\r\n                        c17.13-6.04,29.35-15.8,36.71-22.71L720,0H0V60.56z\"></path>\r\n            </svg>\r\n            <div id=\"problems\" className=\"text-5xl font-bold pt-8 bg-[#f8e6f7] text-basically-black pl-4 \">Problems\r\n            </div>\r\n\r\n            <div className=\"w-full\">\r\n                {getProblemFolderAsJSX(data?.files || [])}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;"],"names":["data","setData","useState","ProblemSection","_ref","index","children","color","getColorForProblemSection","color2","_jsxs","style","background","_jsx","xmlns","viewBox","className","fill","d","colors","length","useEffect","fetch","then","async","response","ok","Error","json","catch","error","console","ScrollLink","to","smooth","duration","src","alt","id","getProblemFolderAsJSX","map","item","meta","title","description","files","Link","problemId","problemName"],"sourceRoot":""}